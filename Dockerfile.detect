# syntax=docker/dockerfile:1.7-labs
FROM pytorch/pytorch:2.2.1-cuda12.1-cudnn8-runtime

ARG YOLOX_REF=0.3.0

LABEL org.opencontainers.image.source="https://github.com/boog9/decoder-poc" \
      org.opencontainers.image.description="Decoder YOLOX detection" \
      org.opencontainers.image.licenses="Apache-2.0"

# Avoid interactive prompts when installing packages
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ffmpeg \
        cmake \
        ninja-build \
        git \
        build-essential \
        python3-dev \
        tzdata && \
    ln -fs /usr/share/zoneinfo/${TZ} /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata && \
    rm -rf /var/lib/apt/lists/*

COPY requirements.txt /tmp/requirements.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    python -m pip install -U pip setuptools wheel
RUN --mount=type=cache,target=/root/.cache/pip \
    pip3 install -r /tmp/requirements.txt && \
      (pip3 install --no-deps "yolox @ git+https://github.com/Megvii-BaseDetection/YOLOX.git@${YOLOX_REF}" \
       || (echo "[warn] YOLOX ref '${YOLOX_REF}' not found, falling back to 'main'" && \
           pip3 install --no-deps "yolox @ git+https://github.com/Megvii-BaseDetection/YOLOX.git@main")) && \
    <<'BASH'
set -e
python - <<'PY' || { echo '[warn] YOLOX smoke-check failed (non-fatal)'; exit 0; }
import importlib, inspect
try:
    import torch, torchvision
    print('torch:', torch.__version__, '| torchvision:', torchvision.__version__)
except Exception as e:
    print('torch/vision check failed:', e)
vt = importlib.import_module('yolox.data.data_augment').ValTransform
print('ValTransform has legacy:', 'legacy' in inspect.signature(vt.__init__).parameters)
try:
    from yolox.exp import get_exp
    print('get_exp available:', True)
except Exception as e:
    print('get_exp import failed:', e)
PY
BASH

WORKDIR /app
COPY . /app

ENTRYPOINT ["python", "-m", "src.detect_objects"]
